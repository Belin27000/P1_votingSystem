{
	"id": "973e022e8cfaa4c29749d5f73661c982",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Voting.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.27;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\n\ncontract Voting is Ownable{\n\n    enum WorkflowStatus {\n        RegisteringVoters,\n        ProposalsRegistrationStarted,\n        ProposalsRegistrationEnded,\n        VotingSessionStarted,\n        VotingSessionEnded,\n        VotesTallied\n    }\n    WorkflowStatus private  state;\n\n    constructor() Ownable(msg.sender){ //Specifie que le proprietaire du contrat et celui qui l'a deployé\n        state = WorkflowStatus.VotesTallied;     //Definit l'état inital\n    }\n\n    event WorkflowStatusChange(WorkflowStatus previousStatus, WorkflowStatus newStatus);\n\n    function nextVotingStatus() public onlyOwner{ //Definis le status à l'etape suivante\n        WorkflowStatus previousStatus=state; //stock la valeur de status avant modification dans previousStatus\n\n        if (state== WorkflowStatus.VotesTallied){\n            state = WorkflowStatus.RegisteringVoters; //Reviens au premier état si à la fin des enum Workflow\n        }else{\n            state = WorkflowStatus(uint(state)+1);\n        }\n        WorkflowStatus newStatus=state; //stock la valeur de status avant modification dans previousStatus\n        emit WorkflowStatusChange(previousStatus, newStatus); //Emet le changement de status du processus de vote sur la blockchain\n    }\n\n    mapping (address => bool) whitelist; //Configuration de la liste blanche des address authorisée à voter\n    event VoterRegistered(address voterAddress);\n\n    function _whitelist(address _address) public onlyOwner{\n        require(state == WorkflowStatus.RegisteringVoters,\"Address can be added only in Registration phase\"); //Check que nous sommes bien dans la phase d'enregistrement des adresses\n        require(!whitelist[_address],\"Address already registered\");//Check si l'addresse n'est pas déjà dans la whitelist\n        whitelist[_address]=true; //Ajoute l'addresse si elle n'est pas dans la liste\n\n        emit VoterRegistered(_address); //emet sur la blockchain l'adresse whitelisted\n    }\n    \n    \n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Voting.sol": {
				"Voting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voterAddress",
									"type": "address"
								}
							],
							"name": "VoterRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum Voting.WorkflowStatus",
									"name": "previousStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum Voting.WorkflowStatus",
									"name": "newStatus",
									"type": "uint8"
								}
							],
							"name": "WorkflowStatusChange",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "_whitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextVotingStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Voting.sol\":170:2130  contract Voting is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Voting.sol\":451:633  constructor() Ownable(msg.sender){ //Specifie que le proprietaire du contrat et celui qui l'a deployé... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/Voting.sol\":473:483  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Voting.sol\":570:597  WorkflowStatus.VotesTallied */\n  0x05\n    /* \"contracts/Voting.sol\":562:567  state */\n  0x00\n  0x14\n    /* \"contracts/Voting.sol\":562:597  state = WorkflowStatus.VotesTallied */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x05\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_13\n  jump\t// in\ntag_12:\ntag_11:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Voting.sol\":170:2130  contract Voting is Ownable{... */\n  jump(tag_14)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_16:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_17:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_22\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_18:\n    /* \"#utility.yul\":328:352   */\n  tag_24\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_26\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_18\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:773   */\ntag_13:\n    /* \"#utility.yul\":641:718   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":638:639   */\n  0x00\n    /* \"#utility.yul\":631:719   */\n  mstore\n    /* \"#utility.yul\":738:742   */\n  0x21\n    /* \"#utility.yul\":735:736   */\n  0x04\n    /* \"#utility.yul\":728:743   */\n  mstore\n    /* \"#utility.yul\":762:766   */\n  0x24\n    /* \"#utility.yul\":759:760   */\n  0x00\n    /* \"#utility.yul\":752:767   */\n  revert\n    /* \"contracts/Voting.sol\":170:2130  contract Voting is Ownable{... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Voting.sol\":170:2130  contract Voting is Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ea49925\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcfdb63ac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/Voting.sol\":729:1410  function nextVotingStatus() public onlyOwner{ //Definis le status à l'etape suivante... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Voting.sol\":1576:2118  function _whitelist(address _address) public onlyOwner{... */\n    tag_6:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Voting.sol\":729:1410  function nextVotingStatus() public onlyOwner{ //Definis le status à l'etape suivante... */\n    tag_9:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_24\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_24:\n        /* \"contracts/Voting.sol\":823:852  WorkflowStatus previousStatus */\n      0x00\n        /* \"contracts/Voting.sol\":853:858  state */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Voting.sol\":823:858  WorkflowStatus previousStatus=state */\n      swap1\n      pop\n        /* \"contracts/Voting.sol\":948:975  WorkflowStatus.VotesTallied */\n      0x05\n        /* \"contracts/Voting.sol\":940:975  state== WorkflowStatus.VotesTallied */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n    tag_27:\n        /* \"contracts/Voting.sol\":940:945  state */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Voting.sol\":940:975  state== WorkflowStatus.VotesTallied */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_29\n      jump\t// in\n    tag_31:\n    tag_30:\n      sub\n        /* \"contracts/Voting.sol\":936:1165  if (state== WorkflowStatus.VotesTallied){... */\n      tag_32\n      jumpi\n        /* \"contracts/Voting.sol\":998:1030  WorkflowStatus.RegisteringVoters */\n      0x00\n        /* \"contracts/Voting.sol\":990:995  state */\n      0x00\n      0x14\n        /* \"contracts/Voting.sol\":990:1030  state = WorkflowStatus.RegisteringVoters */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      tag_34\n      tag_29\n      jump\t// in\n    tag_34:\n    tag_33:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Voting.sol\":936:1165  if (state== WorkflowStatus.VotesTallied){... */\n      jump(tag_35)\n    tag_32:\n        /* \"contracts/Voting.sol\":1152:1153  1 */\n      0x01\n        /* \"contracts/Voting.sol\":1145:1150  state */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Voting.sol\":1140:1151  uint(state) */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_29\n      jump\t// in\n    tag_37:\n    tag_36:\n        /* \"contracts/Voting.sol\":1140:1153  uint(state)+1 */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"contracts/Voting.sol\":1125:1154  WorkflowStatus(uint(state)+1) */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_29\n      jump\t// in\n    tag_41:\n    tag_40:\n        /* \"contracts/Voting.sol\":1117:1122  state */\n      0x00\n      0x14\n        /* \"contracts/Voting.sol\":1117:1154  state = WorkflowStatus(uint(state)+1) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      tag_43\n      tag_29\n      jump\t// in\n    tag_43:\n    tag_42:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Voting.sol\":936:1165  if (state== WorkflowStatus.VotesTallied){... */\n    tag_35:\n        /* \"contracts/Voting.sol\":1174:1198  WorkflowStatus newStatus */\n      0x00\n        /* \"contracts/Voting.sol\":1199:1204  state */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Voting.sol\":1174:1204  WorkflowStatus newStatus=state */\n      swap1\n      pop\n        /* \"contracts/Voting.sol\":1286:1333  WorkflowStatusChange(previousStatus, newStatus) */\n      0x0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f\n        /* \"contracts/Voting.sol\":1307:1321  previousStatus */\n      dup3\n        /* \"contracts/Voting.sol\":1323:1332  newStatus */\n      dup3\n        /* \"contracts/Voting.sol\":1286:1333  WorkflowStatusChange(previousStatus, newStatus) */\n      mload(0x40)\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Voting.sol\":773:1410  { //Definis le status à l'etape suivante... */\n      pop\n      pop\n        /* \"contracts/Voting.sol\":729:1410  function nextVotingStatus() public onlyOwner{ //Definis le status à l'etape suivante... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_47\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_49\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Voting.sol\":1576:2118  function _whitelist(address _address) public onlyOwner{... */\n    tag_19:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"contracts/Voting.sol\":1657:1689  WorkflowStatus.RegisteringVoters */\n      0x00\n        /* \"contracts/Voting.sol\":1648:1689  state == WorkflowStatus.RegisteringVoters */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_55\n      jumpi\n      tag_56\n      tag_29\n      jump\t// in\n    tag_56:\n    tag_55:\n        /* \"contracts/Voting.sol\":1648:1653  state */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Voting.sol\":1648:1689  state == WorkflowStatus.RegisteringVoters */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      tag_58\n      tag_29\n      jump\t// in\n    tag_58:\n    tag_57:\n      eq\n        /* \"contracts/Voting.sol\":1640:1740  require(state == WorkflowStatus.RegisteringVoters,\"Address can be added only in Registration phase\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/Voting.sol\":1832:1841  whitelist */\n      0x01\n        /* \"contracts/Voting.sol\":1832:1851  whitelist[_address] */\n      0x00\n        /* \"contracts/Voting.sol\":1842:1850  _address */\n      dup3\n        /* \"contracts/Voting.sol\":1832:1851  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Voting.sol\":1831:1851  !whitelist[_address] */\n      iszero\n        /* \"contracts/Voting.sol\":1823:1881  require(!whitelist[_address],\"Address already registered\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"contracts/Voting.sol\":1967:1971  true */\n      0x01\n        /* \"contracts/Voting.sol\":1947:1956  whitelist */\n      dup1\n        /* \"contracts/Voting.sol\":1947:1966  whitelist[_address] */\n      0x00\n        /* \"contracts/Voting.sol\":1957:1965  _address */\n      dup4\n        /* \"contracts/Voting.sol\":1947:1966  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Voting.sol\":1947:1971  whitelist[_address]=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Voting.sol\":2039:2064  VoterRegistered(_address) */\n      0xb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd\n        /* \"contracts/Voting.sol\":2055:2063  _address */\n      dup2\n        /* \"contracts/Voting.sol\":2039:2064  VoterRegistered(_address) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Voting.sol\":1576:2118  function _whitelist(address _address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_25\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_69\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_13\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_76\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_81:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_82:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_103\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_81\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_83:\n        /* \"#utility.yul\":328:352   */\n      tag_105\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_82\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_15:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_107\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_83\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_85:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      0x00\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_87:\n        /* \"#utility.yul\":993:1017   */\n      tag_112\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_82\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      0x00\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_113:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_88:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_115\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_87\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_18:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_118\n      tag_85\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1269:1388   */\n    tag_117:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_119\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_88\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1708   */\n    tag_29:\n        /* \"#utility.yul\":1576:1653   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1573:1574   */\n      0x00\n        /* \"#utility.yul\":1566:1654   */\n      mstore\n        /* \"#utility.yul\":1673:1677   */\n      0x21\n        /* \"#utility.yul\":1670:1671   */\n      0x04\n        /* \"#utility.yul\":1663:1678   */\n      mstore\n        /* \"#utility.yul\":1697:1701   */\n      0x24\n        /* \"#utility.yul\":1694:1695   */\n      0x00\n        /* \"#utility.yul\":1687:1702   */\n      revert\n        /* \"#utility.yul\":1714:1791   */\n    tag_89:\n        /* \"#utility.yul\":1751:1758   */\n      0x00\n        /* \"#utility.yul\":1780:1785   */\n      dup2\n        /* \"#utility.yul\":1769:1785   */\n      swap1\n      pop\n        /* \"#utility.yul\":1714:1791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1797:1977   */\n    tag_90:\n        /* \"#utility.yul\":1845:1922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1842:1843   */\n      0x00\n        /* \"#utility.yul\":1835:1923   */\n      mstore\n        /* \"#utility.yul\":1942:1946   */\n      0x11\n        /* \"#utility.yul\":1939:1940   */\n      0x04\n        /* \"#utility.yul\":1932:1947   */\n      mstore\n        /* \"#utility.yul\":1966:1970   */\n      0x24\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1956:1971   */\n      revert\n        /* \"#utility.yul\":1983:2174   */\n    tag_39:\n        /* \"#utility.yul\":2023:2026   */\n      0x00\n        /* \"#utility.yul\":2042:2062   */\n      tag_124\n        /* \"#utility.yul\":2060:2061   */\n      dup3\n        /* \"#utility.yul\":2042:2062   */\n      tag_89\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2037:2062   */\n      swap2\n      pop\n        /* \"#utility.yul\":2076:2096   */\n      tag_125\n        /* \"#utility.yul\":2094:2095   */\n      dup4\n        /* \"#utility.yul\":2076:2096   */\n      tag_89\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2071:2096   */\n      swap3\n      pop\n        /* \"#utility.yul\":2119:2120   */\n      dup3\n        /* \"#utility.yul\":2116:2117   */\n      dup3\n        /* \"#utility.yul\":2112:2121   */\n      add\n        /* \"#utility.yul\":2105:2121   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2143   */\n      dup1\n        /* \"#utility.yul\":2137:2138   */\n      dup3\n        /* \"#utility.yul\":2134:2144   */\n      gt\n        /* \"#utility.yul\":2131:2167   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":2147:2165   */\n      tag_127\n      tag_90\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2131:2167   */\n    tag_126:\n        /* \"#utility.yul\":1983:2174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2180:2302   */\n    tag_91:\n        /* \"#utility.yul\":2270:2271   */\n      0x06\n        /* \"#utility.yul\":2263:2268   */\n      dup2\n        /* \"#utility.yul\":2260:2272   */\n      lt\n        /* \"#utility.yul\":2250:2296   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2276:2294   */\n      tag_130\n      tag_29\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2250:2296   */\n    tag_129:\n        /* \"#utility.yul\":2180:2302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2308:2453   */\n    tag_92:\n        /* \"#utility.yul\":2362:2369   */\n      0x00\n        /* \"#utility.yul\":2391:2396   */\n      dup2\n        /* \"#utility.yul\":2380:2396   */\n      swap1\n      pop\n        /* \"#utility.yul\":2397:2447   */\n      tag_132\n        /* \"#utility.yul\":2441:2446   */\n      dup3\n        /* \"#utility.yul\":2397:2447   */\n      tag_91\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2308:2453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2459:2604   */\n    tag_93:\n        /* \"#utility.yul\":2524:2533   */\n      0x00\n        /* \"#utility.yul\":2557:2598   */\n      tag_134\n        /* \"#utility.yul\":2592:2597   */\n      dup3\n        /* \"#utility.yul\":2557:2598   */\n      tag_92\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2544:2598   */\n      swap1\n      pop\n        /* \"#utility.yul\":2459:2604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2610:2771   */\n    tag_94:\n        /* \"#utility.yul\":2712:2764   */\n      tag_136\n        /* \"#utility.yul\":2758:2763   */\n      dup2\n        /* \"#utility.yul\":2712:2764   */\n      tag_93\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2707:2710   */\n      dup3\n        /* \"#utility.yul\":2700:2765   */\n      mstore\n        /* \"#utility.yul\":2610:2771   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2777:3169   */\n    tag_45:\n        /* \"#utility.yul\":2928:2932   */\n      0x00\n        /* \"#utility.yul\":2966:2968   */\n      0x40\n        /* \"#utility.yul\":2955:2964   */\n      dup3\n        /* \"#utility.yul\":2951:2969   */\n      add\n        /* \"#utility.yul\":2943:2969   */\n      swap1\n      pop\n        /* \"#utility.yul\":2979:3065   */\n      tag_138\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3051:3060   */\n      dup4\n        /* \"#utility.yul\":3047:3064   */\n      add\n        /* \"#utility.yul\":3038:3044   */\n      dup6\n        /* \"#utility.yul\":2979:3065   */\n      tag_94\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3075:3162   */\n      tag_139\n        /* \"#utility.yul\":3158:3160   */\n      0x20\n        /* \"#utility.yul\":3147:3156   */\n      dup4\n        /* \"#utility.yul\":3143:3161   */\n      add\n        /* \"#utility.yul\":3134:3140   */\n      dup5\n        /* \"#utility.yul\":3075:3162   */\n      tag_94\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2777:3169   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3344   */\n    tag_95:\n        /* \"#utility.yul\":3259:3270   */\n      0x00\n        /* \"#utility.yul\":3293:3299   */\n      dup3\n        /* \"#utility.yul\":3288:3291   */\n      dup3\n        /* \"#utility.yul\":3281:3300   */\n      mstore\n        /* \"#utility.yul\":3333:3337   */\n      0x20\n        /* \"#utility.yul\":3328:3331   */\n      dup3\n        /* \"#utility.yul\":3324:3338   */\n      add\n        /* \"#utility.yul\":3309:3338   */\n      swap1\n      pop\n        /* \"#utility.yul\":3175:3344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3584   */\n    tag_96:\n        /* \"#utility.yul\":3490:3524   */\n      0x416464726573732063616e206265206164646564206f6e6c7920696e20526567\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3478:3484   */\n      dup3\n        /* \"#utility.yul\":3474:3488   */\n      add\n        /* \"#utility.yul\":3467:3525   */\n      mstore\n        /* \"#utility.yul\":3559:3576   */\n      0x697374726174696f6e2070686173650000000000000000000000000000000000\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3546:3552   */\n      dup3\n        /* \"#utility.yul\":3542:3557   */\n      add\n        /* \"#utility.yul\":3535:3577   */\n      mstore\n        /* \"#utility.yul\":3350:3584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3590:3956   */\n    tag_97:\n        /* \"#utility.yul\":3732:3735   */\n      0x00\n        /* \"#utility.yul\":3753:3820   */\n      tag_143\n        /* \"#utility.yul\":3817:3819   */\n      0x2f\n        /* \"#utility.yul\":3812:3815   */\n      dup4\n        /* \"#utility.yul\":3753:3820   */\n      tag_95\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3746:3820   */\n      swap2\n      pop\n        /* \"#utility.yul\":3829:3922   */\n      tag_144\n        /* \"#utility.yul\":3918:3921   */\n      dup3\n        /* \"#utility.yul\":3829:3922   */\n      tag_96\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3947:3949   */\n      0x40\n        /* \"#utility.yul\":3942:3945   */\n      dup3\n        /* \"#utility.yul\":3938:3950   */\n      add\n        /* \"#utility.yul\":3931:3950   */\n      swap1\n      pop\n        /* \"#utility.yul\":3590:3956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3962:4381   */\n    tag_61:\n        /* \"#utility.yul\":4128:4132   */\n      0x00\n        /* \"#utility.yul\":4166:4168   */\n      0x20\n        /* \"#utility.yul\":4155:4164   */\n      dup3\n        /* \"#utility.yul\":4151:4169   */\n      add\n        /* \"#utility.yul\":4143:4169   */\n      swap1\n      pop\n        /* \"#utility.yul\":4215:4224   */\n      dup2\n        /* \"#utility.yul\":4209:4213   */\n      dup2\n        /* \"#utility.yul\":4205:4225   */\n      sub\n        /* \"#utility.yul\":4201:4202   */\n      0x00\n        /* \"#utility.yul\":4190:4199   */\n      dup4\n        /* \"#utility.yul\":4186:4203   */\n      add\n        /* \"#utility.yul\":4179:4226   */\n      mstore\n        /* \"#utility.yul\":4243:4374   */\n      tag_146\n        /* \"#utility.yul\":4369:4373   */\n      dup2\n        /* \"#utility.yul\":4243:4374   */\n      tag_97\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4235:4374   */\n      swap1\n      pop\n        /* \"#utility.yul\":3962:4381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4387:4563   */\n    tag_98:\n        /* \"#utility.yul\":4527:4555   */\n      0x4164647265737320616c72656164792072656769737465726564000000000000\n        /* \"#utility.yul\":4523:4524   */\n      0x00\n        /* \"#utility.yul\":4515:4521   */\n      dup3\n        /* \"#utility.yul\":4511:4525   */\n      add\n        /* \"#utility.yul\":4504:4556   */\n      mstore\n        /* \"#utility.yul\":4387:4563   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4569:4935   */\n    tag_99:\n        /* \"#utility.yul\":4711:4714   */\n      0x00\n        /* \"#utility.yul\":4732:4799   */\n      tag_149\n        /* \"#utility.yul\":4796:4798   */\n      0x1a\n        /* \"#utility.yul\":4791:4794   */\n      dup4\n        /* \"#utility.yul\":4732:4799   */\n      tag_95\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4725:4799   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4901   */\n      tag_150\n        /* \"#utility.yul\":4897:4900   */\n      dup3\n        /* \"#utility.yul\":4808:4901   */\n      tag_98\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4926:4928   */\n      0x20\n        /* \"#utility.yul\":4921:4924   */\n      dup3\n        /* \"#utility.yul\":4917:4929   */\n      add\n        /* \"#utility.yul\":4910:4929   */\n      swap1\n      pop\n        /* \"#utility.yul\":4569:4935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4941:5360   */\n    tag_64:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5194:5203   */\n      dup2\n        /* \"#utility.yul\":5188:5192   */\n      dup2\n        /* \"#utility.yul\":5184:5204   */\n      sub\n        /* \"#utility.yul\":5180:5181   */\n      0x00\n        /* \"#utility.yul\":5169:5178   */\n      dup4\n        /* \"#utility.yul\":5165:5182   */\n      add\n        /* \"#utility.yul\":5158:5205   */\n      mstore\n        /* \"#utility.yul\":5222:5353   */\n      tag_152\n        /* \"#utility.yul\":5348:5352   */\n      dup2\n        /* \"#utility.yul\":5222:5353   */\n      tag_99\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5214:5353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4941:5360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122041ac20b13b71380f3674b0cbc4c830ee3b5a37b552518ed9580cd6e13cca10d164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_269": {
									"entryPoint": 192,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:776:3",
										"nodeType": "YulBlock",
										"src": "0:776:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "621:152:3",
													"nodeType": "YulBlock",
													"src": "621:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:3",
																		"nodeType": "YulLiteral",
																		"src": "638:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:77:3",
																		"nodeType": "YulLiteral",
																		"src": "641:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "631:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:3"
																},
																"nativeSrc": "631:88:3",
																"nodeType": "YulFunctionCall",
																"src": "631:88:3"
															},
															"nativeSrc": "631:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "631:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "735:1:3",
																		"nodeType": "YulLiteral",
																		"src": "735:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "738:4:3",
																		"nodeType": "YulLiteral",
																		"src": "738:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "728:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "728:6:3"
																},
																"nativeSrc": "728:15:3",
																"nodeType": "YulFunctionCall",
																"src": "728:15:3"
															},
															"nativeSrc": "728:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "728:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "759:1:3",
																		"nodeType": "YulLiteral",
																		"src": "759:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "762:4:3",
																		"nodeType": "YulLiteral",
																		"src": "762:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "752:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:3"
																},
																"nativeSrc": "752:15:3",
																"nodeType": "YulFunctionCall",
																"src": "752:15:3"
															},
															"nativeSrc": "752:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "752:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "593:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "593:180:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007891906101c0565b60405180910390fd5b610090816100c060201b60201c565b5060055f60146101000a81548160ff021916908360058111156100b6576100b56101d9565b5b0217905550610206565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101aa82610181565b9050919050565b6101ba816101a0565b82525050565b5f6020820190506101d35f8301846101b1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b61088c806102135f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80634ea4992514610059578063715018a6146100635780638da5cb5b1461006d578063cfdb63ac1461008b578063f2fde38b146100a7575b5f5ffd5b6100616100c3565b005b61006b6101fb565b005b61007561020e565b60405161008291906105db565b60405180910390f35b6100a560048036038101906100a09190610622565b610235565b005b6100c160048036038101906100bc9190610622565b6103c9565b005b6100cb61044d565b5f5f60149054906101000a900460ff1690506005808111156100f0576100ef61064d565b5b5f60149054906101000a900460ff1660058111156101115761011061064d565b5b03610144575f5f60146101000a81548160ff0219169083600581111561013a5761013961064d565b5b02179055506101ac565b60015f60149054906101000a900460ff1660058111156101675761016661064d565b5b61017191906106b0565b60058111156101835761018261064d565b5b5f60146101000a81548160ff021916908360058111156101a6576101a561064d565b5b02179055505b5f5f60149054906101000a900460ff1690507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f82826040516101ef929190610729565b60405180910390a15050565b61020361044d565b61020c5f6104d4565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61023d61044d565b5f60058111156102505761024f61064d565b5b5f60149054906101000a900460ff1660058111156102715761027061064d565b5b146102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a8906107d0565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033290610838565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd816040516103be91906105db565b60405180910390a150565b6103d161044d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610441575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161043891906105db565b60405180910390fd5b61044a816104d4565b50565b610455610595565b73ffffffffffffffffffffffffffffffffffffffff1661047361020e565b73ffffffffffffffffffffffffffffffffffffffff16146104d257610496610595565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104c991906105db565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105c58261059c565b9050919050565b6105d5816105bb565b82525050565b5f6020820190506105ee5f8301846105cc565b92915050565b5f5ffd5b610601816105bb565b811461060b575f5ffd5b50565b5f8135905061061c816105f8565b92915050565b5f60208284031215610637576106366105f4565b5b5f6106448482850161060e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106ba8261067a565b91506106c58361067a565b92508282019050808211156106dd576106dc610683565b5b92915050565b600681106106f4576106f361064d565b5b50565b5f819050610704826106e3565b919050565b5f610713826106f7565b9050919050565b61072381610709565b82525050565b5f60408201905061073c5f83018561071a565b610749602083018461071a565b9392505050565b5f82825260208201905092915050565b7f416464726573732063616e206265206164646564206f6e6c7920696e205265675f8201527f697374726174696f6e2070686173650000000000000000000000000000000000602082015250565b5f6107ba602f83610750565b91506107c582610760565b604082019050919050565b5f6020820190508181035f8301526107e7816107ae565b9050919050565b7f4164647265737320616c726561647920726567697374657265640000000000005f82015250565b5f610822601a83610750565b915061082d826107ee565b602082019050919050565b5f6020820190508181035f83015261084f81610816565b905091905056fea264697066735822122041ac20b13b71380f3674b0cbc4c830ee3b5a37b552518ed9580cd6e13cca10d164736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x5 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB6 JUMPI PUSH2 0xB5 PUSH2 0x1D9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x206 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA DUP3 PUSH2 0x181 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x1A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x88C DUP1 PUSH2 0x213 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EA49925 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xCFDB63AC EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x44D JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0xF0 JUMPI PUSH2 0xEF PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x111 JUMPI PUSH2 0x110 PUSH2 0x64D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x144 JUMPI PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x13A JUMPI PUSH2 0x139 PUSH2 0x64D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x167 JUMPI PUSH2 0x166 PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH2 0x182 PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x64D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH32 0xA97A4EE45751E2ABF3E4FC8946939630B11B371EA8AE39CCDC3056E98F5CC3F DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP3 SWAP2 SWAP1 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x203 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x20C PUSH0 PUSH2 0x4D4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x44D JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x64D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A8 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD DUP2 PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x44D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x441 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A DUP2 PUSH2 0x4D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x595 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x473 PUSH2 0x20E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D2 JUMPI PUSH2 0x496 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5C5 DUP3 PUSH2 0x59C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x5BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5EE PUSH0 DUP4 ADD DUP5 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x5BB JUMP JUMPDEST DUP2 EQ PUSH2 0x60B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61C DUP2 PUSH2 0x5F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH2 0x636 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x644 DUP5 DUP3 DUP6 ADD PUSH2 0x60E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6BA DUP3 PUSH2 0x67A JUMP JUMPDEST SWAP2 POP PUSH2 0x6C5 DUP4 PUSH2 0x67A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x683 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F3 PUSH2 0x64D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x704 DUP3 PUSH2 0x6E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x713 DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x709 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73C PUSH0 DUP4 ADD DUP6 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x749 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x71A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573732063616E206265206164646564206F6E6C7920696E20526567 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374726174696F6E2070686173650000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7BA PUSH1 0x2F DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C5 DUP3 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7E7 DUP2 PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320616C72656164792072656769737465726564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x822 PUSH1 0x1A DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x82D DUP3 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x84F DUP2 PUSH2 0x816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xAC KECCAK256 0xB1 EXTCODESIZE PUSH18 0x380F3674B0CBC4C830EE3B5A37B552518ED9 PC 0xC 0xD6 0xE1 EXTCODECOPY 0xCA LT 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "170:1960:0:-:0;;;451:182;;;;;;;;;;473:10;1297:1:1;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;570:27:0::1;562:5;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;170:1960:::0;;2912:187:1;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:180::-;641:77;638:1;631:88;738:4;735:1;728:15;762:4;759:1;752:15;170:1960:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_207": {
									"entryPoint": 1101,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_282": {
									"entryPoint": 1429,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_269": {
									"entryPoint": 1236,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_whitelist_121": {
									"entryPoint": 565,
									"id": 121,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@nextVotingStatus_79": {
									"entryPoint": 195,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_190": {
									"entryPoint": 526,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_221": {
									"entryPoint": 507,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_249": {
									"entryPoint": 969,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_WorkflowStatus_$11_t_enum$_WorkflowStatus_$11__to_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_WorkflowStatus_$11": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_WorkflowStatus_$11_to_t_uint8": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_WorkflowStatus_$11": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5363:3",
										"nodeType": "YulBlock",
										"src": "0:5363:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											},
											{
												"body": {
													"nativeSrc": "633:35:3",
													"nodeType": "YulBlock",
													"src": "633:35:3",
													"statements": [
														{
															"nativeSrc": "643:19:3",
															"nodeType": "YulAssignment",
															"src": "643:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:3",
																		"nodeType": "YulLiteral",
																		"src": "659:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:3"
																},
																"nativeSrc": "653:9:3",
																"nodeType": "YulFunctionCall",
																"src": "653:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:3",
														"nodeType": "YulTypedName",
														"src": "626:6:3",
														"type": ""
													}
												],
												"src": "593:75:3"
											},
											{
												"body": {
													"nativeSrc": "763:28:3",
													"nodeType": "YulBlock",
													"src": "763:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:3",
																		"nodeType": "YulLiteral",
																		"src": "780:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:3",
																		"nodeType": "YulLiteral",
																		"src": "783:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:3"
																},
																"nativeSrc": "773:12:3",
																"nodeType": "YulFunctionCall",
																"src": "773:12:3"
															},
															"nativeSrc": "773:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:3"
											},
											{
												"body": {
													"nativeSrc": "886:28:3",
													"nodeType": "YulBlock",
													"src": "886:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:3",
																		"nodeType": "YulLiteral",
																		"src": "903:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:3",
																		"nodeType": "YulLiteral",
																		"src": "906:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:3"
																},
																"nativeSrc": "896:12:3",
																"nodeType": "YulFunctionCall",
																"src": "896:12:3"
															},
															"nativeSrc": "896:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:3"
											},
											{
												"body": {
													"nativeSrc": "963:79:3",
													"nodeType": "YulBlock",
													"src": "963:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:3",
																"nodeType": "YulBlock",
																"src": "1020:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:3"
																			},
																			"nativeSrc": "1022:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:3"
																		},
																		"nativeSrc": "1022:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:3"
																				},
																				"nativeSrc": "993:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:3"
																		},
																		"nativeSrc": "983:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:3"
																},
																"nativeSrc": "976:43:3",
																"nodeType": "YulFunctionCall",
																"src": "976:43:3"
															},
															"nativeSrc": "973:63:3",
															"nodeType": "YulIf",
															"src": "973:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:3",
														"nodeType": "YulTypedName",
														"src": "956:5:3",
														"type": ""
													}
												],
												"src": "920:122:3"
											},
											{
												"body": {
													"nativeSrc": "1100:87:3",
													"nodeType": "YulBlock",
													"src": "1100:87:3",
													"statements": [
														{
															"nativeSrc": "1110:29:3",
															"nodeType": "YulAssignment",
															"src": "1110:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:3"
																},
																"nativeSrc": "1119:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:3"
																},
																"nativeSrc": "1148:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:3"
															},
															"nativeSrc": "1148:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:3",
														"nodeType": "YulTypedName",
														"src": "1078:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:3",
														"nodeType": "YulTypedName",
														"src": "1086:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:3",
														"nodeType": "YulTypedName",
														"src": "1094:5:3",
														"type": ""
													}
												],
												"src": "1048:139:3"
											},
											{
												"body": {
													"nativeSrc": "1259:263:3",
													"nodeType": "YulBlock",
													"src": "1259:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:3",
																"nodeType": "YulBlock",
																"src": "1305:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:3"
																			},
																			"nativeSrc": "1307:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:3"
																		},
																		"nativeSrc": "1307:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:3"
																		},
																		"nativeSrc": "1276:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:3"
																},
																"nativeSrc": "1272:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:3"
															},
															"nativeSrc": "1269:119:3",
															"nodeType": "YulIf",
															"src": "1269:119:3"
														},
														{
															"nativeSrc": "1398:117:3",
															"nodeType": "YulBlock",
															"src": "1398:117:3",
															"statements": [
																{
																	"nativeSrc": "1413:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:3"
																				},
																				"nativeSrc": "1473:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:3"
																		},
																		"nativeSrc": "1452:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:3",
														"nodeType": "YulTypedName",
														"src": "1229:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:3",
														"nodeType": "YulTypedName",
														"src": "1240:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:3",
														"nodeType": "YulTypedName",
														"src": "1252:6:3",
														"type": ""
													}
												],
												"src": "1193:329:3"
											},
											{
												"body": {
													"nativeSrc": "1556:152:3",
													"nodeType": "YulBlock",
													"src": "1556:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1573:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1576:77:3",
																		"nodeType": "YulLiteral",
																		"src": "1576:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1566:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1566:6:3"
																},
																"nativeSrc": "1566:88:3",
																"nodeType": "YulFunctionCall",
																"src": "1566:88:3"
															},
															"nativeSrc": "1566:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "1566:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1670:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1673:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1673:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1663:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:3"
																},
																"nativeSrc": "1663:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1663:15:3"
															},
															"nativeSrc": "1663:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1663:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1697:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1687:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:3"
																},
																"nativeSrc": "1687:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1687:15:3"
															},
															"nativeSrc": "1687:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1687:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1528:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1528:180:3"
											},
											{
												"body": {
													"nativeSrc": "1759:32:3",
													"nodeType": "YulBlock",
													"src": "1759:32:3",
													"statements": [
														{
															"nativeSrc": "1769:16:3",
															"nodeType": "YulAssignment",
															"src": "1769:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1780:5:3",
																"nodeType": "YulIdentifier",
																"src": "1780:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1769:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1769:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1714:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1741:5:3",
														"nodeType": "YulTypedName",
														"src": "1741:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1751:7:3",
														"nodeType": "YulTypedName",
														"src": "1751:7:3",
														"type": ""
													}
												],
												"src": "1714:77:3"
											},
											{
												"body": {
													"nativeSrc": "1825:152:3",
													"nodeType": "YulBlock",
													"src": "1825:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1842:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1842:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1845:77:3",
																		"nodeType": "YulLiteral",
																		"src": "1845:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1835:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:3"
																},
																"nativeSrc": "1835:88:3",
																"nodeType": "YulFunctionCall",
																"src": "1835:88:3"
															},
															"nativeSrc": "1835:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "1835:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1939:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1939:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1942:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1942:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1932:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:3"
																},
																"nativeSrc": "1932:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1932:15:3"
															},
															"nativeSrc": "1932:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1932:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1956:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:3"
																},
																"nativeSrc": "1956:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1956:15:3"
															},
															"nativeSrc": "1956:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "1956:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1797:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1797:180:3"
											},
											{
												"body": {
													"nativeSrc": "2027:147:3",
													"nodeType": "YulBlock",
													"src": "2027:147:3",
													"statements": [
														{
															"nativeSrc": "2037:25:3",
															"nodeType": "YulAssignment",
															"src": "2037:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2060:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2060:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2042:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:3"
																},
																"nativeSrc": "2042:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2042:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2037:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2037:1:3"
																}
															]
														},
														{
															"nativeSrc": "2071:25:3",
															"nodeType": "YulAssignment",
															"src": "2071:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2094:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2094:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2076:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "2076:17:3"
																},
																"nativeSrc": "2076:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2076:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2071:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "2071:1:3"
																}
															]
														},
														{
															"nativeSrc": "2105:16:3",
															"nodeType": "YulAssignment",
															"src": "2105:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2116:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2119:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2119:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2112:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:3"
																},
																"nativeSrc": "2112:9:3",
																"nodeType": "YulFunctionCall",
																"src": "2112:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2105:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2105:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2145:22:3",
																"nodeType": "YulBlock",
																"src": "2145:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2147:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2147:16:3"
																			},
																			"nativeSrc": "2147:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2147:18:3"
																		},
																		"nativeSrc": "2147:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2147:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2137:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2137:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2140:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2140:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2134:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2134:2:3"
																},
																"nativeSrc": "2134:10:3",
																"nodeType": "YulFunctionCall",
																"src": "2134:10:3"
															},
															"nativeSrc": "2131:36:3",
															"nodeType": "YulIf",
															"src": "2131:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1983:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2014:1:3",
														"nodeType": "YulTypedName",
														"src": "2014:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2017:1:3",
														"nodeType": "YulTypedName",
														"src": "2017:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2023:3:3",
														"nodeType": "YulTypedName",
														"src": "2023:3:3",
														"type": ""
													}
												],
												"src": "1983:191:3"
											},
											{
												"body": {
													"nativeSrc": "2240:62:3",
													"nodeType": "YulBlock",
													"src": "2240:62:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2274:22:3",
																"nodeType": "YulBlock",
																"src": "2274:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "2276:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "2276:16:3"
																			},
																			"nativeSrc": "2276:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2276:18:3"
																		},
																		"nativeSrc": "2276:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2276:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2263:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2263:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2270:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2270:1:3",
																				"type": "",
																				"value": "6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2260:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2260:2:3"
																		},
																		"nativeSrc": "2260:12:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2260:12:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2253:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2253:6:3"
																},
																"nativeSrc": "2253:20:3",
																"nodeType": "YulFunctionCall",
																"src": "2253:20:3"
															},
															"nativeSrc": "2250:46:3",
															"nodeType": "YulIf",
															"src": "2250:46:3"
														}
													]
												},
												"name": "validator_assert_t_enum$_WorkflowStatus_$11",
												"nativeSrc": "2180:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2233:5:3",
														"nodeType": "YulTypedName",
														"src": "2233:5:3",
														"type": ""
													}
												],
												"src": "2180:122:3"
											},
											{
												"body": {
													"nativeSrc": "2370:83:3",
													"nodeType": "YulBlock",
													"src": "2370:83:3",
													"statements": [
														{
															"nativeSrc": "2380:16:3",
															"nodeType": "YulAssignment",
															"src": "2380:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "2391:5:3",
																"nodeType": "YulIdentifier",
																"src": "2391:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2380:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "2380:7:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2441:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2441:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_WorkflowStatus_$11",
																	"nativeSrc": "2397:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2397:43:3"
																},
																"nativeSrc": "2397:50:3",
																"nodeType": "YulFunctionCall",
																"src": "2397:50:3"
															},
															"nativeSrc": "2397:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "2397:50:3"
														}
													]
												},
												"name": "cleanup_t_enum$_WorkflowStatus_$11",
												"nativeSrc": "2308:145:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2352:5:3",
														"nodeType": "YulTypedName",
														"src": "2352:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2362:7:3",
														"nodeType": "YulTypedName",
														"src": "2362:7:3",
														"type": ""
													}
												],
												"src": "2308:145:3"
											},
											{
												"body": {
													"nativeSrc": "2534:70:3",
													"nodeType": "YulBlock",
													"src": "2534:70:3",
													"statements": [
														{
															"nativeSrc": "2544:54:3",
															"nodeType": "YulAssignment",
															"src": "2544:54:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2592:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2592:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_WorkflowStatus_$11",
																	"nativeSrc": "2557:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "2557:34:3"
																},
																"nativeSrc": "2557:41:3",
																"nodeType": "YulFunctionCall",
																"src": "2557:41:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2544:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "2544:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_WorkflowStatus_$11_to_t_uint8",
												"nativeSrc": "2459:145:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2514:5:3",
														"nodeType": "YulTypedName",
														"src": "2514:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2524:9:3",
														"nodeType": "YulTypedName",
														"src": "2524:9:3",
														"type": ""
													}
												],
												"src": "2459:145:3"
											},
											{
												"body": {
													"nativeSrc": "2690:81:3",
													"nodeType": "YulBlock",
													"src": "2690:81:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2707:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2707:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2758:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2758:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_WorkflowStatus_$11_to_t_uint8",
																			"nativeSrc": "2712:45:3",
																			"nodeType": "YulIdentifier",
																			"src": "2712:45:3"
																		},
																		"nativeSrc": "2712:52:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:52:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2700:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:3"
																},
																"nativeSrc": "2700:65:3",
																"nodeType": "YulFunctionCall",
																"src": "2700:65:3"
															},
															"nativeSrc": "2700:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "2700:65:3"
														}
													]
												},
												"name": "abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack",
												"nativeSrc": "2610:161:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2678:5:3",
														"nodeType": "YulTypedName",
														"src": "2678:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2685:3:3",
														"nodeType": "YulTypedName",
														"src": "2685:3:3",
														"type": ""
													}
												],
												"src": "2610:161:3"
											},
											{
												"body": {
													"nativeSrc": "2933:236:3",
													"nodeType": "YulBlock",
													"src": "2933:236:3",
													"statements": [
														{
															"nativeSrc": "2943:26:3",
															"nodeType": "YulAssignment",
															"src": "2943:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2955:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2955:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2966:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2966:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2951:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2951:3:3"
																},
																"nativeSrc": "2951:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2951:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2943:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2943:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3038:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3051:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3051:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3062:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3062:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3047:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3047:3:3"
																		},
																		"nativeSrc": "3047:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3047:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack",
																	"nativeSrc": "2979:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:3"
																},
																"nativeSrc": "2979:86:3",
																"nodeType": "YulFunctionCall",
																"src": "2979:86:3"
															},
															"nativeSrc": "2979:86:3",
															"nodeType": "YulExpressionStatement",
															"src": "2979:86:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3134:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3134:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3147:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3147:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3158:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3158:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3143:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3143:3:3"
																		},
																		"nativeSrc": "3143:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3143:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack",
																	"nativeSrc": "3075:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3075:58:3"
																},
																"nativeSrc": "3075:87:3",
																"nodeType": "YulFunctionCall",
																"src": "3075:87:3"
															},
															"nativeSrc": "3075:87:3",
															"nodeType": "YulExpressionStatement",
															"src": "3075:87:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_WorkflowStatus_$11_t_enum$_WorkflowStatus_$11__to_t_uint8_t_uint8__fromStack_reversed",
												"nativeSrc": "2777:392:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2897:9:3",
														"nodeType": "YulTypedName",
														"src": "2897:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2909:6:3",
														"nodeType": "YulTypedName",
														"src": "2909:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2917:6:3",
														"nodeType": "YulTypedName",
														"src": "2917:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2928:4:3",
														"nodeType": "YulTypedName",
														"src": "2928:4:3",
														"type": ""
													}
												],
												"src": "2777:392:3"
											},
											{
												"body": {
													"nativeSrc": "3271:73:3",
													"nodeType": "YulBlock",
													"src": "3271:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3288:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3288:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3293:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3293:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3281:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:3"
																},
																"nativeSrc": "3281:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3281:19:3"
															},
															"nativeSrc": "3281:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "3281:19:3"
														},
														{
															"nativeSrc": "3309:29:3",
															"nodeType": "YulAssignment",
															"src": "3309:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3328:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3328:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3333:4:3",
																		"nodeType": "YulLiteral",
																		"src": "3333:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3324:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:3"
																},
																"nativeSrc": "3324:14:3",
																"nodeType": "YulFunctionCall",
																"src": "3324:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3309:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "3309:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3175:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3243:3:3",
														"nodeType": "YulTypedName",
														"src": "3243:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3248:6:3",
														"nodeType": "YulTypedName",
														"src": "3248:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3259:11:3",
														"nodeType": "YulTypedName",
														"src": "3259:11:3",
														"type": ""
													}
												],
												"src": "3175:169:3"
											},
											{
												"body": {
													"nativeSrc": "3456:128:3",
													"nodeType": "YulBlock",
													"src": "3456:128:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3478:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3478:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3486:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3486:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:3"
																		},
																		"nativeSrc": "3474:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:14:3"
																	},
																	{
																		"hexValue": "416464726573732063616e206265206164646564206f6e6c7920696e20526567",
																		"kind": "string",
																		"nativeSrc": "3490:34:3",
																		"nodeType": "YulLiteral",
																		"src": "3490:34:3",
																		"type": "",
																		"value": "Address can be added only in Reg"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3467:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:3"
																},
																"nativeSrc": "3467:58:3",
																"nodeType": "YulFunctionCall",
																"src": "3467:58:3"
															},
															"nativeSrc": "3467:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "3467:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3546:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3546:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3554:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3554:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3542:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3542:3:3"
																		},
																		"nativeSrc": "3542:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3542:15:3"
																	},
																	{
																		"hexValue": "697374726174696f6e207068617365",
																		"kind": "string",
																		"nativeSrc": "3559:17:3",
																		"nodeType": "YulLiteral",
																		"src": "3559:17:3",
																		"type": "",
																		"value": "istration phase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3535:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3535:6:3"
																},
																"nativeSrc": "3535:42:3",
																"nodeType": "YulFunctionCall",
																"src": "3535:42:3"
															},
															"nativeSrc": "3535:42:3",
															"nodeType": "YulExpressionStatement",
															"src": "3535:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df",
												"nativeSrc": "3350:234:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3448:6:3",
														"nodeType": "YulTypedName",
														"src": "3448:6:3",
														"type": ""
													}
												],
												"src": "3350:234:3"
											},
											{
												"body": {
													"nativeSrc": "3736:220:3",
													"nodeType": "YulBlock",
													"src": "3736:220:3",
													"statements": [
														{
															"nativeSrc": "3746:74:3",
															"nodeType": "YulAssignment",
															"src": "3746:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3812:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3812:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3817:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3817:2:3",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3753:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3753:58:3"
																},
																"nativeSrc": "3753:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3753:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3746:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3746:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3918:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3918:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df",
																	"nativeSrc": "3829:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3829:88:3"
																},
																"nativeSrc": "3829:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3829:93:3"
															},
															"nativeSrc": "3829:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3829:93:3"
														},
														{
															"nativeSrc": "3931:19:3",
															"nodeType": "YulAssignment",
															"src": "3931:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3942:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3942:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3947:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3947:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3938:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3938:3:3"
																},
																"nativeSrc": "3938:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3938:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3931:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3590:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3724:3:3",
														"nodeType": "YulTypedName",
														"src": "3724:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3732:3:3",
														"nodeType": "YulTypedName",
														"src": "3732:3:3",
														"type": ""
													}
												],
												"src": "3590:366:3"
											},
											{
												"body": {
													"nativeSrc": "4133:248:3",
													"nodeType": "YulBlock",
													"src": "4133:248:3",
													"statements": [
														{
															"nativeSrc": "4143:26:3",
															"nodeType": "YulAssignment",
															"src": "4143:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4155:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4155:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4166:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4151:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:3"
																},
																"nativeSrc": "4151:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4151:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4143:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4143:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4190:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4190:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4201:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4201:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4186:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4186:3:3"
																		},
																		"nativeSrc": "4186:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4186:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4209:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "4209:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4215:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4205:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4205:3:3"
																		},
																		"nativeSrc": "4205:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4205:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4179:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4179:6:3"
																},
																"nativeSrc": "4179:47:3",
																"nodeType": "YulFunctionCall",
																"src": "4179:47:3"
															},
															"nativeSrc": "4179:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "4179:47:3"
														},
														{
															"nativeSrc": "4235:139:3",
															"nodeType": "YulAssignment",
															"src": "4235:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4369:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4369:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4243:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "4243:124:3"
																},
																"nativeSrc": "4243:131:3",
																"nodeType": "YulFunctionCall",
																"src": "4243:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4235:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4235:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3962:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4113:9:3",
														"nodeType": "YulTypedName",
														"src": "4113:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4128:4:3",
														"nodeType": "YulTypedName",
														"src": "4128:4:3",
														"type": ""
													}
												],
												"src": "3962:419:3"
											},
											{
												"body": {
													"nativeSrc": "4493:70:3",
													"nodeType": "YulBlock",
													"src": "4493:70:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4515:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4515:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4523:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4523:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4511:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:3"
																		},
																		"nativeSrc": "4511:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4511:14:3"
																	},
																	{
																		"hexValue": "4164647265737320616c72656164792072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "4527:28:3",
																		"nodeType": "YulLiteral",
																		"src": "4527:28:3",
																		"type": "",
																		"value": "Address already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4504:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:3"
																},
																"nativeSrc": "4504:52:3",
																"nodeType": "YulFunctionCall",
																"src": "4504:52:3"
															},
															"nativeSrc": "4504:52:3",
															"nodeType": "YulExpressionStatement",
															"src": "4504:52:3"
														}
													]
												},
												"name": "store_literal_in_memory_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2",
												"nativeSrc": "4387:176:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4485:6:3",
														"nodeType": "YulTypedName",
														"src": "4485:6:3",
														"type": ""
													}
												],
												"src": "4387:176:3"
											},
											{
												"body": {
													"nativeSrc": "4715:220:3",
													"nodeType": "YulBlock",
													"src": "4715:220:3",
													"statements": [
														{
															"nativeSrc": "4725:74:3",
															"nodeType": "YulAssignment",
															"src": "4725:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4791:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4791:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4796:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4796:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4732:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "4732:58:3"
																},
																"nativeSrc": "4732:67:3",
																"nodeType": "YulFunctionCall",
																"src": "4732:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4725:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4897:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4897:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2",
																	"nativeSrc": "4808:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "4808:88:3"
																},
																"nativeSrc": "4808:93:3",
																"nodeType": "YulFunctionCall",
																"src": "4808:93:3"
															},
															"nativeSrc": "4808:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "4808:93:3"
														},
														{
															"nativeSrc": "4910:19:3",
															"nodeType": "YulAssignment",
															"src": "4910:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4921:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4921:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4926:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4926:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4917:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4917:3:3"
																},
																"nativeSrc": "4917:12:3",
																"nodeType": "YulFunctionCall",
																"src": "4917:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4910:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4569:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4703:3:3",
														"nodeType": "YulTypedName",
														"src": "4703:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4711:3:3",
														"nodeType": "YulTypedName",
														"src": "4711:3:3",
														"type": ""
													}
												],
												"src": "4569:366:3"
											},
											{
												"body": {
													"nativeSrc": "5112:248:3",
													"nodeType": "YulBlock",
													"src": "5112:248:3",
													"statements": [
														{
															"nativeSrc": "5122:26:3",
															"nodeType": "YulAssignment",
															"src": "5122:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5134:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5145:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5130:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:3"
																},
																"nativeSrc": "5130:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5130:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5122:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5169:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5169:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5180:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5180:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5165:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5165:3:3"
																		},
																		"nativeSrc": "5165:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5165:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5188:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5188:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5184:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5184:3:3"
																		},
																		"nativeSrc": "5184:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5158:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:3"
																},
																"nativeSrc": "5158:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5158:47:3"
															},
															"nativeSrc": "5158:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5158:47:3"
														},
														{
															"nativeSrc": "5214:139:3",
															"nodeType": "YulAssignment",
															"src": "5214:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5348:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5348:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5222:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5222:124:3"
																},
																"nativeSrc": "5222:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5222:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5214:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5214:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4941:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5092:9:3",
														"nodeType": "YulTypedName",
														"src": "5092:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5107:4:3",
														"nodeType": "YulTypedName",
														"src": "5107:4:3",
														"type": ""
													}
												],
												"src": "4941:419:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_assert_t_enum$_WorkflowStatus_$11(value) {\n        if iszero(lt(value, 6)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_WorkflowStatus_$11(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_WorkflowStatus_$11(value)\n    }\n\n    function convert_t_enum$_WorkflowStatus_$11_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_WorkflowStatus_$11(value)\n    }\n\n    function abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_WorkflowStatus_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_WorkflowStatus_$11_t_enum$_WorkflowStatus_$11__to_t_uint8_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_WorkflowStatus_$11_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address can be added only in Reg\")\n\n        mstore(add(memPtr, 32), \"istration phase\")\n\n    }\n\n    function abi_encode_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address already registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c80634ea4992514610059578063715018a6146100635780638da5cb5b1461006d578063cfdb63ac1461008b578063f2fde38b146100a7575b5f5ffd5b6100616100c3565b005b61006b6101fb565b005b61007561020e565b60405161008291906105db565b60405180910390f35b6100a560048036038101906100a09190610622565b610235565b005b6100c160048036038101906100bc9190610622565b6103c9565b005b6100cb61044d565b5f5f60149054906101000a900460ff1690506005808111156100f0576100ef61064d565b5b5f60149054906101000a900460ff1660058111156101115761011061064d565b5b03610144575f5f60146101000a81548160ff0219169083600581111561013a5761013961064d565b5b02179055506101ac565b60015f60149054906101000a900460ff1660058111156101675761016661064d565b5b61017191906106b0565b60058111156101835761018261064d565b5b5f60146101000a81548160ff021916908360058111156101a6576101a561064d565b5b02179055505b5f5f60149054906101000a900460ff1690507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f82826040516101ef929190610729565b60405180910390a15050565b61020361044d565b61020c5f6104d4565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61023d61044d565b5f60058111156102505761024f61064d565b5b5f60149054906101000a900460ff1660058111156102715761027061064d565b5b146102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a8906107d0565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033290610838565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055507fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd816040516103be91906105db565b60405180910390a150565b6103d161044d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610441575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161043891906105db565b60405180910390fd5b61044a816104d4565b50565b610455610595565b73ffffffffffffffffffffffffffffffffffffffff1661047361020e565b73ffffffffffffffffffffffffffffffffffffffff16146104d257610496610595565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016104c991906105db565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105c58261059c565b9050919050565b6105d5816105bb565b82525050565b5f6020820190506105ee5f8301846105cc565b92915050565b5f5ffd5b610601816105bb565b811461060b575f5ffd5b50565b5f8135905061061c816105f8565b92915050565b5f60208284031215610637576106366105f4565b5b5f6106448482850161060e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106ba8261067a565b91506106c58361067a565b92508282019050808211156106dd576106dc610683565b5b92915050565b600681106106f4576106f361064d565b5b50565b5f819050610704826106e3565b919050565b5f610713826106f7565b9050919050565b61072381610709565b82525050565b5f60408201905061073c5f83018561071a565b610749602083018461071a565b9392505050565b5f82825260208201905092915050565b7f416464726573732063616e206265206164646564206f6e6c7920696e205265675f8201527f697374726174696f6e2070686173650000000000000000000000000000000000602082015250565b5f6107ba602f83610750565b91506107c582610760565b604082019050919050565b5f6020820190508181035f8301526107e7816107ae565b9050919050565b7f4164647265737320616c726561647920726567697374657265640000000000005f82015250565b5f610822601a83610750565b915061082d826107ee565b602082019050919050565b5f6020820190508181035f83015261084f81610816565b905091905056fea264697066735822122041ac20b13b71380f3674b0cbc4c830ee3b5a37b552518ed9580cd6e13cca10d164736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4EA49925 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xCFDB63AC EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0x1FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x20E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCB PUSH2 0x44D JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x5 DUP1 DUP2 GT ISZERO PUSH2 0xF0 JUMPI PUSH2 0xEF PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x111 JUMPI PUSH2 0x110 PUSH2 0x64D JUMP JUMPDEST JUMPDEST SUB PUSH2 0x144 JUMPI PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x13A JUMPI PUSH2 0x139 PUSH2 0x64D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x167 JUMPI PUSH2 0x166 PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x183 JUMPI PUSH2 0x182 PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x64D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH32 0xA97A4EE45751E2ABF3E4FC8946939630B11B371EA8AE39CCDC3056E98F5CC3F DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP3 SWAP2 SWAP1 PUSH2 0x729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x203 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x20C PUSH0 PUSH2 0x4D4 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x23D PUSH2 0x44D JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x64D JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x271 JUMPI PUSH2 0x270 PUSH2 0x64D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A8 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xB6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD DUP2 PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x44D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x441 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44A DUP2 PUSH2 0x4D4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x455 PUSH2 0x595 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x473 PUSH2 0x20E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D2 JUMPI PUSH2 0x496 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5C5 DUP3 PUSH2 0x59C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x5BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5EE PUSH0 DUP4 ADD DUP5 PUSH2 0x5CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x5BB JUMP JUMPDEST DUP2 EQ PUSH2 0x60B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61C DUP2 PUSH2 0x5F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x637 JUMPI PUSH2 0x636 PUSH2 0x5F4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x644 DUP5 DUP3 DUP6 ADD PUSH2 0x60E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6BA DUP3 PUSH2 0x67A JUMP JUMPDEST SWAP2 POP PUSH2 0x6C5 DUP4 PUSH2 0x67A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6DC PUSH2 0x683 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 LT PUSH2 0x6F4 JUMPI PUSH2 0x6F3 PUSH2 0x64D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x704 DUP3 PUSH2 0x6E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x713 DUP3 PUSH2 0x6F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x709 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x73C PUSH0 DUP4 ADD DUP6 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x749 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x71A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573732063616E206265206164646564206F6E6C7920696E20526567 PUSH0 DUP3 ADD MSTORE PUSH32 0x697374726174696F6E2070686173650000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7BA PUSH1 0x2F DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C5 DUP3 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7E7 DUP2 PUSH2 0x7AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320616C72656164792072656769737465726564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x822 PUSH1 0x1A DUP4 PUSH2 0x750 JUMP JUMPDEST SWAP2 POP PUSH2 0x82D DUP3 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x84F DUP2 PUSH2 0x816 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xAC KECCAK256 0xB1 EXTCODESIZE PUSH18 0x380F3674B0CBC4C830EE3B5A37B552518ED9 PC 0xC 0xD6 0xE1 EXTCODECOPY 0xCA LT 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "170:1960:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;729:681;;;:::i;:::-;;2293:101:1;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1576:542:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;729:681:0;1531:13:1;:11;:13::i;:::-;823:29:0::1;853:5;;;;;;;;;;;823:35;;948:27;940:35:::0;::::1;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:35;;;;;;;;:::i;:::-;;::::0;936:229:::1;;998:32;990:5;;:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;936:229;;;1152:1;1145:5;;;;;;;;;;;1140:11;;;;;;;;:::i;:::-;;:13;;;;:::i;:::-;1125:29;;;;;;;;:::i;:::-;;1117:5;;:37;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;936:229;1174:24;1199:5;;;;;;;;;;;1174:30;;1286:47;1307:14;1323:9;1286:47;;;;;;;:::i;:::-;;;;;;;;773:637;;729:681::o:0;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1576:542:0:-;1531:13:1;:11;:13::i;:::-;1657:32:0::1;1648:41;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;1640:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1832:9;:19;1842:8;1832:19;;;;;;;;;;;;;;;;;;;;;;;;;1831:20;1823:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1967:4;1947:9:::0;:19:::1;1957:8;1947:19;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;2039:25;2055:8;2039:25;;;;;;:::i;:::-;;;;;;;;1576:542:::0;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:180::-;1576:77;1573:1;1566:88;1673:4;1670:1;1663:15;1697:4;1694:1;1687:15;1714:77;1751:7;1780:5;1769:16;;1714:77;;;:::o;1797:180::-;1845:77;1842:1;1835:88;1942:4;1939:1;1932:15;1966:4;1963:1;1956:15;1983:191;2023:3;2042:20;2060:1;2042:20;:::i;:::-;2037:25;;2076:20;2094:1;2076:20;:::i;:::-;2071:25;;2119:1;2116;2112:9;2105:16;;2140:3;2137:1;2134:10;2131:36;;;2147:18;;:::i;:::-;2131:36;1983:191;;;;:::o;2180:122::-;2270:1;2263:5;2260:12;2250:46;;2276:18;;:::i;:::-;2250:46;2180:122;:::o;2308:145::-;2362:7;2391:5;2380:16;;2397:50;2441:5;2397:50;:::i;:::-;2308:145;;;:::o;2459:::-;2524:9;2557:41;2592:5;2557:41;:::i;:::-;2544:54;;2459:145;;;:::o;2610:161::-;2712:52;2758:5;2712:52;:::i;:::-;2707:3;2700:65;2610:161;;:::o;2777:392::-;2928:4;2966:2;2955:9;2951:18;2943:26;;2979:86;3062:1;3051:9;3047:17;3038:6;2979:86;:::i;:::-;3075:87;3158:2;3147:9;3143:18;3134:6;3075:87;:::i;:::-;2777:392;;;;;:::o;3175:169::-;3259:11;3293:6;3288:3;3281:19;3333:4;3328:3;3324:14;3309:29;;3175:169;;;;:::o;3350:234::-;3490:34;3486:1;3478:6;3474:14;3467:58;3559:17;3554:2;3546:6;3542:15;3535:42;3350:234;:::o;3590:366::-;3732:3;3753:67;3817:2;3812:3;3753:67;:::i;:::-;3746:74;;3829:93;3918:3;3829:93;:::i;:::-;3947:2;3942:3;3938:12;3931:19;;3590:366;;;:::o;3962:419::-;4128:4;4166:2;4155:9;4151:18;4143:26;;4215:9;4209:4;4205:20;4201:1;4190:9;4186:17;4179:47;4243:131;4369:4;4243:131;:::i;:::-;4235:139;;3962:419;;;:::o;4387:176::-;4527:28;4523:1;4515:6;4511:14;4504:52;4387:176;:::o;4569:366::-;4711:3;4732:67;4796:2;4791:3;4732:67;:::i;:::-;4725:74;;4808:93;4897:3;4808:93;:::i;:::-;4926:2;4921:3;4917:12;4910:19;;4569:366;;;:::o;4941:419::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5194:9;5188:4;5184:20;5180:1;5169:9;5165:17;5158:47;5222:131;5348:4;5222:131;:::i;:::-;5214:139;;4941:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "437600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_whitelist(address)": "infinite",
								"nextVotingStatus()": "infinite",
								"owner()": "2536",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 633,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 633,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 451,
									"end": 633,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 451,
									"end": 633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 473,
									"end": 483,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 570,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 562,
									"end": 567,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 567,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 562,
									"end": 597,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 562,
									"end": 597,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 593,
									"end": 773,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 593,
									"end": 773,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 718,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 639,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 719,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 738,
									"end": 742,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 735,
									"end": 736,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 728,
									"end": 743,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 762,
									"end": 766,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 759,
									"end": 760,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 752,
									"end": 767,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 2130,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041ac20b13b71380f3674b0cbc4c830ee3b5a37b552518ed9580cd6e13cca10d164736f6c634300081b0033",
									".code": [
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "4EA49925"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "CFDB63AC"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 2130,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 729,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1576,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1576,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 729,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 853,
											"end": 858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 823,
											"end": 858,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 823,
											"end": 858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 940,
											"end": 975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 940,
											"end": 945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 940,
											"end": 975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 940,
											"end": 975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 940,
											"end": 975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 990,
											"end": 1030,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1030,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1145,
											"end": 1150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1140,
											"end": 1151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1140,
											"end": 1151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1140,
											"end": 1153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1140,
											"end": 1153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1140,
											"end": 1153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1140,
											"end": 1153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1125,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1117,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 936,
											"end": 1165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1199,
											"end": 1204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A97A4EE45751E2ABF3E4FC8946939630B11B371EA8AE39CCDC3056E98F5CC3F"
										},
										{
											"begin": 1307,
											"end": 1321,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1332,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1286,
											"end": 1333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1333,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 1410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 773,
											"end": 1410,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 1410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1648,
											"end": 1689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1648,
											"end": 1653,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1648,
											"end": 1689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1648,
											"end": 1689,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1640,
											"end": 1740,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1640,
											"end": 1740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1850,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1832,
											"end": 1851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1823,
											"end": 1881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1823,
											"end": 1881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1965,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B6BE2187D059CC2A55FE29E0E503B566E1E0F8C8780096E185429350ACFFD3DD"
										},
										{
											"begin": 2055,
											"end": 2063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2039,
											"end": 2064,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2039,
											"end": 2064,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 2118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1528,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1653,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1654,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1677,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1663,
											"end": 1678,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1701,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1694,
											"end": 1695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1702,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1791,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1714,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1791,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1797,
											"end": 1977,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1797,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1922,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2174,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1983,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2042,
											"end": 2062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2062,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2042,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2094,
											"end": 2095,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2076,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2076,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2167,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2131,
											"end": 2167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2147,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2147,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2165,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2147,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2167,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2131,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 2174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2302,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2180,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2272,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2250,
											"end": 2296,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2276,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2276,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2296,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2250,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2453,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2308,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2397,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2397,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2453,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2453,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2604,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2459,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2592,
											"end": 2597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2557,
											"end": 2598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2598,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2557,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2771,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2610,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2712,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2712,
											"end": 2764,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2712,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2765,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2943,
											"end": 2969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3060,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3047,
											"end": 3064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2979,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3065,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2979,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3158,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3075,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3162,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3075,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3259,
											"end": 3270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3281,
											"end": 3300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3337,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3328,
											"end": 3331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3344,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3584,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3350,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3524,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573732063616E206265206164646564206F6E6C7920696E20526567"
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3484,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3474,
											"end": 3488,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3525,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3576,
											"name": "PUSH",
											"source": 3,
											"value": "697374726174696F6E2070686173650000000000000000000000000000000000"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3546,
											"end": 3552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3535,
											"end": 3577,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3956,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3590,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3817,
											"end": 3819,
											"name": "PUSH",
											"source": 3,
											"value": "2F"
										},
										{
											"begin": 3812,
											"end": 3815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3753,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3820,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3753,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3746,
											"end": 3820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3746,
											"end": 3820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3918,
											"end": 3921,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3829,
											"end": 3922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3922,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3829,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3947,
											"end": 3949,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3945,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3931,
											"end": 3950,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3931,
											"end": 3950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3590,
											"end": 3956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3962,
											"end": 4381,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3962,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4225,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4201,
											"end": 4202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4369,
											"end": 4373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4243,
											"end": 4374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4374,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4243,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3962,
											"end": 4381,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3962,
											"end": 4381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3962,
											"end": 4381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3962,
											"end": 4381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4563,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4387,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4555,
											"name": "PUSH",
											"source": 3,
											"value": "4164647265737320616C72656164792072656769737465726564000000000000"
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4935,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4569,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4732,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4799,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4732,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4725,
											"end": 4799,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4725,
											"end": 4799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4808,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4901,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4808,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 4924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 4929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4935,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4569,
											"end": 4935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5360,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4941,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5184,
											"end": 5204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5178,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5158,
											"end": 5205,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5348,
											"end": 5352,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5222,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5222,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5214,
											"end": 5353,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5214,
											"end": 5353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 5360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/Voting.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_whitelist(address)": "cfdb63ac",
							"nextVotingStatus()": "4ea49925",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"_whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextVotingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Voting.sol\":{\"keccak256\":\"0xcbfbdab9c106359cd36091ea9a320fbe84e179da97384969205d376d9de608fd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c970f3707d9ac0914d1bb957737d7589a3e506426ed280997e75dae86bce4277\",\"dweb:/ipfs/QmNjvkNaEzB1WXgJ1ofsaTY1HiZ1L1MF3yyjGoEXFfEP7q\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 131,
								"contract": "contracts/Voting.sol:Voting",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 14,
								"contract": "contracts/Voting.sol:Voting",
								"label": "state",
								"offset": 20,
								"slot": "0",
								"type": "t_enum(WorkflowStatus)11"
							},
							{
								"astId": 83,
								"contract": "contracts/Voting.sol:Voting",
								"label": "whitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(WorkflowStatus)11": {
								"encoding": "inplace",
								"label": "enum Voting.WorkflowStatus",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 131,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Voting.sol": {
				"ast": {
					"absolutePath": "contracts/Voting.sol",
					"exportedSymbols": {
						"Context": [
							300
						],
						"Ownable": [
							270
						],
						"Voting": [
							122
						]
					},
					"id": 123,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 123,
							"sourceUnit": 271,
							"src": "63:105:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Ownable",
										"nameLocations": [
											"189:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 270,
										"src": "189:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "189:7:0"
								}
							],
							"canonicalName": "Voting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 122,
							"linearizedBaseContracts": [
								122,
								270,
								300
							],
							"name": "Voting",
							"nameLocation": "179:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Voting.WorkflowStatus",
									"id": 11,
									"members": [
										{
											"id": 5,
											"name": "RegisteringVoters",
											"nameLocation": "233:17:0",
											"nodeType": "EnumValue",
											"src": "233:17:0"
										},
										{
											"id": 6,
											"name": "ProposalsRegistrationStarted",
											"nameLocation": "260:28:0",
											"nodeType": "EnumValue",
											"src": "260:28:0"
										},
										{
											"id": 7,
											"name": "ProposalsRegistrationEnded",
											"nameLocation": "298:26:0",
											"nodeType": "EnumValue",
											"src": "298:26:0"
										},
										{
											"id": 8,
											"name": "VotingSessionStarted",
											"nameLocation": "334:20:0",
											"nodeType": "EnumValue",
											"src": "334:20:0"
										},
										{
											"id": 9,
											"name": "VotingSessionEnded",
											"nameLocation": "364:18:0",
											"nodeType": "EnumValue",
											"src": "364:18:0"
										},
										{
											"id": 10,
											"name": "VotesTallied",
											"nameLocation": "392:12:0",
											"nodeType": "EnumValue",
											"src": "392:12:0"
										}
									],
									"name": "WorkflowStatus",
									"nameLocation": "208:14:0",
									"nodeType": "EnumDefinition",
									"src": "203:207:0"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "state",
									"nameLocation": "439:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "415:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_WorkflowStatus_$11",
										"typeString": "enum Voting.WorkflowStatus"
									},
									"typeName": {
										"id": 13,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 12,
											"name": "WorkflowStatus",
											"nameLocations": [
												"415:14:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 11,
											"src": "415:14:0"
										},
										"referencedDeclaration": 11,
										"src": "415:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_WorkflowStatus_$11",
											"typeString": "enum Voting.WorkflowStatus"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "484:149:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "562:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$11",
															"typeString": "enum Voting.WorkflowStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 22,
															"name": "WorkflowStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "570:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$11_$",
																"typeString": "type(enum Voting.WorkflowStatus)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "585:12:0",
														"memberName": "VotesTallied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "570:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$11",
															"typeString": "enum Voting.WorkflowStatus"
														}
													},
													"src": "562:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$11",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "562:35:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "473:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "477:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "473:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 19,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 16,
												"name": "Ownable",
												"nameLocations": [
													"465:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 270,
												"src": "465:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "465:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:0:0"
									},
									"scope": 122,
									"src": "451:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f",
									"id": 35,
									"name": "WorkflowStatusChange",
									"nameLocation": "645:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousStatus",
												"nameLocation": "681:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "666:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$11",
													"typeString": "enum Voting.WorkflowStatus"
												},
												"typeName": {
													"id": 29,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 28,
														"name": "WorkflowStatus",
														"nameLocations": [
															"666:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 11,
														"src": "666:14:0"
													},
													"referencedDeclaration": 11,
													"src": "666:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$11",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStatus",
												"nameLocation": "712:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "697:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_WorkflowStatus_$11",
													"typeString": "enum Voting.WorkflowStatus"
												},
												"typeName": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "WorkflowStatus",
														"nameLocations": [
															"697:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 11,
														"src": "697:14:0"
													},
													"referencedDeclaration": 11,
													"src": "697:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$11",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:57:0"
									},
									"src": "639:84:0"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "773:637:0",
										"statements": [
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "previousStatus",
														"nameLocation": "838:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "823:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$11",
															"typeString": "enum Voting.WorkflowStatus"
														},
														"typeName": {
															"id": 41,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 40,
																"name": "WorkflowStatus",
																"nameLocations": [
																	"823:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "823:14:0"
															},
															"referencedDeclaration": 11,
															"src": "823:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"id": 43,
													"name": "state",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "853:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$11",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "823:35:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$11",
														"typeString": "enum Voting.WorkflowStatus"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 45,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "940:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$11",
															"typeString": "enum Voting.WorkflowStatus"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 46,
															"name": "WorkflowStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "948:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$11_$",
																"typeString": "type(enum Voting.WorkflowStatus)"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "963:12:0",
														"memberName": "VotesTallied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "948:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$11",
															"typeString": "enum Voting.WorkflowStatus"
														}
													},
													"src": "940:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 66,
													"nodeType": "Block",
													"src": "1103:62:0",
													"statements": [
														{
															"expression": {
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 55,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1117:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																		"typeString": "enum Voting.WorkflowStatus"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 62,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 59,
																						"name": "state",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 14,
																						"src": "1145:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																							"typeString": "enum Voting.WorkflowStatus"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																							"typeString": "enum Voting.WorkflowStatus"
																						}
																					],
																					"id": 58,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1140:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 57,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "1140:4:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 60,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1140:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 61,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1152:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "1140:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 56,
																		"name": "WorkflowStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "1125:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$11_$",
																			"typeString": "type(enum Voting.WorkflowStatus)"
																		}
																	},
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1125:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																		"typeString": "enum Voting.WorkflowStatus"
																	}
																},
																"src": "1117:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																	"typeString": "enum Voting.WorkflowStatus"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "1117:37:0"
														}
													]
												},
												"id": 67,
												"nodeType": "IfStatement",
												"src": "936:229:0",
												"trueBody": {
													"id": 54,
													"nodeType": "Block",
													"src": "976:123:0",
													"statements": [
														{
															"expression": {
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 49,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "990:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																		"typeString": "enum Voting.WorkflowStatus"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 50,
																		"name": "WorkflowStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "998:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$11_$",
																			"typeString": "type(enum Voting.WorkflowStatus)"
																		}
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1013:17:0",
																	"memberName": "RegisteringVoters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "998:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																		"typeString": "enum Voting.WorkflowStatus"
																	}
																},
																"src": "990:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																	"typeString": "enum Voting.WorkflowStatus"
																}
															},
															"id": 53,
															"nodeType": "ExpressionStatement",
															"src": "990:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "newStatus",
														"nameLocation": "1189:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "1174:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_WorkflowStatus_$11",
															"typeString": "enum Voting.WorkflowStatus"
														},
														"typeName": {
															"id": 69,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 68,
																"name": "WorkflowStatus",
																"nameLocations": [
																	"1174:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "1174:14:0"
															},
															"referencedDeclaration": 11,
															"src": "1174:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"id": 71,
													"name": "state",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "1199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_WorkflowStatus_$11",
														"typeString": "enum Voting.WorkflowStatus"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1174:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 74,
															"name": "previousStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1307:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															}
														},
														{
															"id": 75,
															"name": "newStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1323:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															},
															{
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															}
														],
														"id": 73,
														"name": "WorkflowStatusChange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "1286:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_WorkflowStatus_$11_$_t_enum$_WorkflowStatus_$11_$returns$__$",
															"typeString": "function (enum Voting.WorkflowStatus,enum Voting.WorkflowStatus)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "EmitStatement",
												"src": "1281:52:0"
											}
										]
									},
									"functionSelector": "4ea49925",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 38,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 37,
												"name": "onlyOwner",
												"nameLocations": [
													"764:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "764:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "764:9:0"
										}
									],
									"name": "nextVotingStatus",
									"nameLocation": "738:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:0:0"
									},
									"scope": 122,
									"src": "729:681:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "1442:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 122,
									"src": "1416:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 82,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 80,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1425:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1416:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 81,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1436:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "b6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd",
									"id": 87,
									"name": "VoterRegistered",
									"nameLocation": "1532:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"mutability": "mutable",
												"name": "voterAddress",
												"nameLocation": "1556:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "1548:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:22:0"
									},
									"src": "1526:44:0"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1630:488:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																"typeString": "enum Voting.WorkflowStatus"
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 95,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1648:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																	"typeString": "enum Voting.WorkflowStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 96,
																	"name": "WorkflowStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1657:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$11_$",
																		"typeString": "type(enum Voting.WorkflowStatus)"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1672:17:0",
																"memberName": "RegisteringVoters",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1657:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_WorkflowStatus_$11",
																	"typeString": "enum Voting.WorkflowStatus"
																}
															},
															"src": "1648:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573732063616e206265206164646564206f6e6c7920696e20526567697374726174696f6e207068617365",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1690:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df",
																"typeString": "literal_string \"Address can be added only in Registration phase\""
															},
															"value": "Address can be added only in Registration phase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_749334ca06b0500201242af2c82c9b09df90a6ac9ccfeb0d8ef53fc37317c4df",
																"typeString": "literal_string \"Address can be added only in Registration phase\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1640:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1640:100:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1831:20:0",
															"subExpression": {
																"baseExpression": {
																	"id": 103,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1832:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 105,
																"indexExpression": {
																	"id": 104,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1842:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1832:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c72656164792072656769737465726564",
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1852:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2",
																"typeString": "literal_string \"Address already registered\""
															},
															"value": "Address already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2",
																"typeString": "literal_string \"Address already registered\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1823:58:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 110,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1947:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 112,
														"indexExpression": {
															"id": 111,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1957:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1947:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1967:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1947:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1947:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 117,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2055:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 116,
														"name": "VoterRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2039:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2039:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "2034:30:0"
											}
										]
									},
									"functionSelector": "cfdb63ac",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 92,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 91,
												"name": "onlyOwner",
												"nameLocations": [
													"1621:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "1621:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1621:9:0"
										}
									],
									"name": "_whitelist",
									"nameLocation": "1585:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1604:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1596:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:18:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:0:0"
									},
									"scope": 122,
									"src": "1576:542:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 123,
							"src": "170:1960:0",
							"usedErrors": [
								136,
								141
							],
							"usedEvents": [
								35,
								87,
								147
							]
						}
					],
					"src": "37:2093:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							300
						],
						"Ownable": [
							270
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 301,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 125,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 300,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 128,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "692:7:1"
									},
									"id": 129,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 127,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 270,
							"linearizedBaseContracts": [
								270,
								300
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 270,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 130,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 136,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 141,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 147,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 153,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 154,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 160,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 159,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 165,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 168,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 173,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 270,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 176,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 179,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 181,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 186,
												"id": 188,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 270,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 194,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 196,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 200,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 199,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 203,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 270,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 210,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 270,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 229,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 230,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 243,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 242,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 236,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 235,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 241,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 244,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 227,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 226,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 181,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 270,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 255,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"id": 257,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 260,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 264,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 263,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 270,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 271,
							"src": "663:2438:1",
							"usedErrors": [
								136,
								141
							],
							"usedEvents": [
								147
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 278,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 277,
												"id": 280,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 300,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 287,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 286,
												"id": 289,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 300,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 300,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			}
		}
	}
}